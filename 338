Given an integer n, return an array ans of length n + 1 such that for each i (0 <= i <= n), ans[i] is the number of 1's in the binary representation of i.

Example 1:
Input: n = 2
Output: [0,1,1]
Explanation:
0 --> 0
1 --> 1
2 --> 10

Example 2:
Input: n = 5
Output: [0,1,1,2,1,2]
Explanation:
0 --> 0
1 --> 1
2 --> 10
3 --> 11
4 --> 100
5 --> 101

Code---------->
class Solution {
    public int[] countBits(int n) {
        int[] arr= new int[n+1];
        for(int i=0;i<=n;i++){
            int temp =0,pow=0,count=0;
            int j =i;
            while(j>0){
                int one=j%2;
                int bin=one*(int)Math.pow(10,pow);
                if(one==1){
                    count++;
                }
                temp=temp+bin;
                j=j/2;
                pow++;
            }
            arr[i]=count;
        }
        return arr;
    }
}

